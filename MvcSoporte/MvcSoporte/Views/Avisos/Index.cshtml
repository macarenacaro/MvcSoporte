@* @model IEnumerable<MvcSoporte.Models.Aviso> *@
@model PaginatedList<MvcSoporte.Models.Aviso>

@{
    ViewData["Title"] = "Index";
}

<h1>Avisos</h1>

<p>
    <a asp-action="Create">Nuevo Aviso</a>
</p>

@* Agregar un cuadro de búsqueda en la vista Index de Avisos *@
<form asp-action="Index">
    <div class="container">
        <div class="row align-items-start">
            <div class="col-md">
                <label class="control-label">Nombre empleado:</label>
                <input type="text" name="strCadenaBusqueda"
                       value="@ViewData["BusquedaActual"]" class="form-control" />
            </div>

            <div class="col-md">
                <label class="control-label">Tipo de avería:</label>
                <select name="intTipoAveriaId" asp-items="ViewBag.TipoAveriaId"
                        class="form-control">
                    <option value="">Todas</option>
                </select>
            </div>


            <div class="col-md align-self-end">
                <input type="submit" value="Buscar" class="btn btn-default" /> |
                <a asp-action="Index" class="btn btn-default">Lista completa</a>
            </div>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Descripción
                @* @Html.DisplayNameFor(model => model.Descripcion) *@
            </th>
            <th>
                Fecha de aviso
                @* @Html.DisplayNameFor(model => model.FechaAviso) *@
            </th>
            <th>
                Fecha de cierre
                @* @Html.DisplayNameFor(model => model.FechaCierre) *@
            </th>
            @*
            <th>
            @Html.DisplayNameFor(model => model.Observaciones)
            </th>
            *@
            <th>
                Empleado
                @* @Html.DisplayNameFor(model => model.Empleado) *@
            </th>
            <th>
                Tipo de avería
                @* @Html.DisplayNameFor(model => model.TipoAveria) *@
            </th>
            <th>
                Equipo
                @* @Html.DisplayNameFor(model => model.Equipo) *@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaAviso)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaCierre)
            </td>
                @*
<td>
@Html.DisplayFor(modelItem => item.Observaciones)
</td>
*@
            <td>
                @Html.DisplayFor(modelItem => item.Empleado.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoAveria.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Equipo.CodigoEquipo)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Eliminar</a>
            </td>
        </tr>
}
    </tbody>
</table>

@* Poner botones de página Siguiente y Anterior *@
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-busquedaActual="@ViewData["BusquedaActual"]"
   asp-route-tipoAveriaIdActual="@ViewData["TipoAveriaIdActual"]"
   class="btn btn-outline-secondary @prevDisabled">
    Anterior
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-busquedaActual="@ViewData["BusquedaActual"]"
   asp-route-tipoAveriaIdActual="@ViewData["TipoAveriaIdActual"]"
   class="btn btn-outline-secondary @nextDisabled">
    Siguiente
</a>